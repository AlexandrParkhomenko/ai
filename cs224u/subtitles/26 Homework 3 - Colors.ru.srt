1
00:00:05,359 --> 00:00:07,520
приветствую всех, этот скринкаст представляет

2
00:00:07,520 --> 00:00:09,760
собой обзор домашней работы и выпечки,

3
00:00:09,760 --> 00:00:11,599
связанной с нашим блоком по обоснованному

4
00:00:11,599 --> 00:00:13,759
пониманию языка больше, чем

5
00:00:13,759 --> 00:00:15,440
любое другое задание, что мы просим

6
00:00:15,440 --> 00:00:17,520
вас сделать здесь, по сути, разработать

7
00:00:17,520 --> 00:00:19,920
полностью интегрированную систему, которая решает

8
00:00:19,920 --> 00:00:21,279
нашу задачу,

9
00:00:21,279 --> 00:00:23,119
поэтому  различие между вопросами домашнего задания

10
00:00:23,119 --> 00:00:25,199
и исходными системными вопросами

11
00:00:25,199 --> 00:00:26,640
здесь как бы стирается,

12
00:00:26,640 --> 00:00:28,480
чтобы вы могли посвятить всю свою

13
00:00:28,480 --> 00:00:30,560
энергию разработке классной оригинальной

14
00:00:30,560 --> 00:00:32,320
системы для этой задачи,

15
00:00:32,320 --> 00:00:34,480
поэтому я собираюсь использовать несколько

16
00:00:34,480 --> 00:00:36,160
слайдов, чтобы дать вам  обзор

17
00:00:36,160 --> 00:00:38,000
всей проблемы и то, как мы думаем

18
00:00:38,000 --> 00:00:40,239
об оценке и как вопросы

19
00:00:40,239 --> 00:00:42,879
связаны с этими общими целями,

20
00:00:42,879 --> 00:00:44,960
поэтому помните, что наша основная задача — это задача «

21
00:00:44,960 --> 00:00:47,280
Стэнфордские цвета в контексте», и

22
00:00:47,280 --> 00:00:48,800
мы собираемся в

23
00:00:48,800 --> 00:00:50,320
первую очередь принять точку зрения говорящего и что это

24
00:00:50,320 --> 00:00:52,480
означает  заключается в том, что входными данными для нашей модели

25
00:00:52,480 --> 00:00:54,480
являются последовательности из трех цветовых полей, одно

26
00:00:54,480 --> 00:00:56,800
из которых обозначено как целевое, а

27
00:00:56,800 --> 00:00:58,399
задача состоит в том, чтобы сгенерировать

28
00:00:58,399 --> 00:01:00,480
объявление.  Описание цели в этом

29
00:01:00,480 --> 00:01:03,680
конкретном контексте.

30
00:01:03,760 --> 00:01:05,680
Базовая модель, которую мы будем использовать

31
00:01:05,680 --> 00:01:08,400
, описанная в факеле.

32
00:01:08,400 --> 00:01:10,560


33
00:01:10,560 --> 00:01:12,880


34
00:01:12,880 --> 00:01:14,960


35
00:01:14,960 --> 00:01:17,360
целевой цвет в третьей

36
00:01:17,360 --> 00:01:18,640
позиции,

37
00:01:18,640 --> 00:01:20,000
так что это входные данные, а затем

38
00:01:20,000 --> 00:01:22,720
шаг декодирования, по сути, заключается в

39
00:01:22,720 --> 00:01:24,880
описании цели в этом контексте, так что это

40
00:01:24,880 --> 00:01:26,799
часть генерации естественного языка, и

41
00:01:26,799 --> 00:01:29,200
мы рассмотрели эту базовую архитектуру в

42
00:01:29,200 --> 00:01:31,439
предыдущих скринкастах, и я вернусь к

43
00:01:31,439 --> 00:01:33,040
некоторым  Из модификаций, которые вы видите

44
00:01:33,040 --> 00:01:36,960
здесь в контексте четвертого вопроса,

45
00:01:36,960 --> 00:01:38,400
есть отдельная записная книжка, называемая

46
00:01:38,400 --> 00:01:40,079
обзором вызывающего абонента, с которой вы должны начать

47
00:01:40,079 --> 00:01:41,600
, она дает вам представление о том, на что

48
00:01:41,600 --> 00:01:43,200
похож набор данных, а также на что похож наш

49
00:01:43,200 --> 00:01:45,360
код моделирования. здесь вы можете видеть,

50
00:01:45,360 --> 00:01:47,280
что  я загрузил сам корпус, в

51
00:01:47,280 --> 00:01:50,560
нем около 47 000 примеров, и

52
00:01:50,560 --> 00:01:52,320
каждый из этих примеров имеет

53
00:01:52,320 --> 00:01:53,759
ряд различных атрибутов, о которых вы

54
00:01:53,759 --> 00:01:56,479
должны знать, так что вот  типичный пример,

55
00:01:56,479 --> 00:01:58,159
первый в корпусе, в

56
00:01:58,159 --> 00:01:59,759
основном у вас есть эти три цветных

57
00:01:59,759 --> 00:02:01,600
пятна, и вы можете видеть, что это отображение

58
00:02:01,600 --> 00:02:03,840
отмечает цель, а также

59
00:02:03,840 --> 00:02:05,200
высказывание,

60
00:02:05,200 --> 00:02:07,280
каждый из этих цветов закодирован как

61
00:02:07,280 --> 00:02:09,919
тройка значений hsv, которая представляет собой

62
00:02:09,919 --> 00:02:11,360
последовательность  три поплавка,

63
00:02:11,360 --> 00:02:12,800
и вы можете видеть здесь, что вы также можете

64
00:02:12,800 --> 00:02:15,920
получить доступ к высказыванию

65
00:02:16,160 --> 00:02:17,760
в базовом корпусе есть три условия,

66
00:02:17,760 --> 00:02:19,599
которые различаются по своей

67
00:02:19,599 --> 00:02:22,160
сложности в дальнем условии все

68
00:02:22,160 --> 00:02:23,599
три цвета сильно отличаются

69
00:02:23,599 --> 00:02:25,040
друг от друга, поэтому задача

70
00:02:25,040 --> 00:02:27,120
идентификации цели  как правило,

71
00:02:27,120 --> 00:02:29,040
здесь довольно просто: человек просто должен был

72
00:02:29,040 --> 00:02:31,120
сказать «фиолетовый»

73
00:02:31,120 --> 00:02:33,440
в разделенном состоянии, два цвета

74
00:02:33,440 --> 00:02:35,440
очень легко спутать, поэтому вы можете видеть

75
00:02:35,440 --> 00:02:37,680
здесь, что у нас есть два зеленых цвета, и

76
00:02:37,680 --> 00:02:39,360
это подтолкнуло говорящего к выбору

77
00:02:39,360 --> 00:02:41,680
более определенной формы зеленого цвета,

78
00:02:41,680 --> 00:02:43,360
говоря  линия,

79
00:02:43,360 --> 00:02:45,120
а самое сложное условие - это близкое

80
00:02:45,120 --> 00:02:46,720
состояние, и именно здесь все

81
00:02:46,720 --> 00:02:48,879
три цвета очень похожи друг на

82
00:02:48,879 --> 00:02:51,120
друга, что приводит к самым длинным

83
00:02:51,120 --> 00:02:52,720
описаниям.  Вы можете видеть здесь, что

84
00:02:52,720 --> 00:02:55,280
говорящий даже сделал два поворота, как

85
00:02:55,280 --> 00:02:57,360
указано этим граничным маркером, чтобы попытаться дать

86
00:02:57,360 --> 00:02:59,280
их полное описание средний розовый

87
00:02:59,280 --> 00:03:01,120
средний темный, потому что эти цвета

88
00:03:01,120 --> 00:03:02,560
настолько путаны,

89
00:03:02,560 --> 00:03:03,680
поэтому вы должны знать об этой

90
00:03:03,680 --> 00:03:04,879
разнице в условиях, и это

91
00:03:04,879 --> 00:03:06,480
может  влияет на то, как вы выполняете различные

92
00:03:06,480 --> 00:03:08,159
виды моделирования в зависимости от последовательности цветов.

93
00:03:08,159 --> 00:03:10,959


94
00:03:11,200 --> 00:03:13,040
Теперь оценка для

95
00:03:13,040 --> 00:03:14,959
систем генерации естественных изображений всегда сложна,

96
00:03:14,959 --> 00:03:16,560
и есть некоторые автоматические метрики,

97
00:03:16,560 --> 00:03:18,560
которые мы можем использовать в качестве ориентиров. На самом деле

98
00:03:18,560 --> 00:03:19,920
мы собираемся использовать синий цвет в разных

99
00:03:19,920 --> 00:03:20,959
местах.

100
00:03:20,959 --> 00:03:23,680
но нашей основной оценочной метрикой

101
00:03:23,680 --> 00:03:25,840
будет эта ориентированная на задачу метрика, которая

102
00:03:25,840 --> 00:03:28,400
привносит своего рода точку зрения слушателя,

103
00:03:28,400 --> 00:03:29,920
поэтому на механическом уровне вот как

104
00:03:29,920 --> 00:03:31,920
мы будем делать прогнозы для данного

105
00:03:31,920 --> 00:03:35,280
контекста c, состоящего из трех

106
00:03:35,280 --> 00:03:37,760
заглавных цветов c здесь все

107
00:03:37,760 --> 00:03:39,760
перестановки этих трех  цвета

108
00:03:39,760 --> 00:03:41,360
предполагают, что вы обучили модель говорящего

109
00:03:41,360 --> 00:03:44,560
ps здесь это вероятностный агент,

110
00:03:44,560 --> 00:03:46,000
мы собираемся подумать о том, как он делает

111
00:03:46,000 --> 00:03:47,760
прогнозы для всех  этих различных

112
00:03:47,760 --> 00:03:50,400
перестановок и принять в качестве своего предсказания

113
00:03:50,400 --> 00:03:52,640
на уровне полной последовательности

114
00:03:52,640 --> 00:03:54,720
ту последовательность, которую он приписывает наибольшую

115
00:03:54,720 --> 00:03:57,120
вероятность заданному сообщению, которое

116
00:03:57,120 --> 00:03:59,120
произвела ваша система,

117
00:03:59,120 --> 00:04:00,640
и тогда мы говорим, что говорящий

118
00:04:00,640 --> 00:04:01,840
точен

119
00:04:01,840 --> 00:04:04,319
в своем предсказании относительно некоторого контекста c как

120
00:04:04,319 --> 00:04:06,159
раз в  случае

121
00:04:06,159 --> 00:04:07,519
наилучшая последовательность, которую он предсказывает с

122
00:04:07,519 --> 00:04:09,680
наибольшей вероятностью, имеет цель

123
00:04:09,680 --> 00:04:12,000
в конечном положении, как указано в

124
00:04:12,000 --> 00:04:13,439
нашей структуре модели,

125
00:04:13,439 --> 00:04:14,879
поэтому немного подробнее, вот

126
00:04:14,879 --> 00:04:16,560
как это работает, на примере предположим,

127
00:04:16,560 --> 00:04:18,399
что наш контекст выглядит так, он имеет

128
00:04:18,399 --> 00:04:20,560
эти три цвета  патчи, и

129
00:04:20,560 --> 00:04:22,639
цель всегда находится в третьей позиции, и наше

130
00:04:22,639 --> 00:04:24,720
сообщение было синим

131
00:04:24,720 --> 00:04:26,000
здесь справа, у нас есть все

132
00:04:26,000 --> 00:04:28,240
перестановки этих трех цветов, и

133
00:04:28,240 --> 00:04:29,600
мы собираемся сказать, что ваша система была

134
00:04:29,600 --> 00:04:31,759
правильной, если ее контекст с наибольшей вероятностью,

135
00:04:31,759 --> 00:04:34,240
учитывая, что это сообщение было одним из

136
00:04:34,240 --> 00:04:36,160
эти два, которые являются одним из двух,

137
00:04:36,160 --> 00:04:38,400
у которых цель находится в конечной позиции, и

138
00:04:38,400 --> 00:04:40,400
система неточна до такой степени, что

139
00:04:40,400 --> 00:04:42,320
она показывает более высокую вероятность o  ne из

140
00:04:42,320 --> 00:04:44,560
этих других последовательностей, по сути, мы

141
00:04:44,560 --> 00:04:46,000
говорим, что это присваивает более высокую

142
00:04:46,000 --> 00:04:48,720
вероятность какой-то другой цели, но мы

143
00:04:48,720 --> 00:04:50,400
действительно работаем на уровне этих полных

144
00:04:50,400 --> 00:04:52,720
последовательностей, а

145
00:04:52,720 --> 00:04:53,919
теперь давайте перейдем к

146
00:04:53,919 --> 00:04:55,600
вопросам, здесь мы сначала начнем с

147
00:04:55,600 --> 00:04:58,000
токенизатора, в котором вы не ограничены  Как

148
00:04:58,000 --> 00:04:59,520
вы проектируете свой токенизатор, вы должны

149
00:04:59,520 --> 00:05:00,880
просто убедиться, что у вас есть начальный

150
00:05:00,880 --> 00:05:03,120
символ и символ n, начальный символ

151
00:05:03,120 --> 00:05:04,880
является важным обусловливающим контекстом

152
00:05:04,880 --> 00:05:06,720
для модели, а конечный символ является

153
00:05:06,720 --> 00:05:08,160
важным сигналом того, что ваша модель

154
00:05:08,160 --> 00:05:10,320
фактически перестанет производить токены,

155
00:05:10,320 --> 00:05:12,160
так что не делайте этого.  не забудьте эти части, но с

156
00:05:12,160 --> 00:05:14,320
точки зрения того, что еще вы там делаете, это не

157
00:05:14,320 --> 00:05:15,840
ограничено, и я думаю, вы можете видеть

158
00:05:15,840 --> 00:05:18,000
из Монро, что все это работает, что

159
00:05:18,000 --> 00:05:20,160
разумный выбор в отношении токенизации может

160
00:05:20,160 --> 00:05:22,720
быть действительно значимым. Второй

161
00:05:22,720 --> 00:05:24,320
вопрос просит вас подумать о том, как

162
00:05:24,320 --> 00:05:26,160
вы представляете  цвета по умолчанию,

163
00:05:26,160 --> 00:05:27,840
они просто будут этими тремя значениями с плавающей запятой,

164
00:05:27,840 --> 00:05:30,720
но это, вероятно, не оптимально,

165
00:05:30,720 --> 00:05:32,960
э-э, во всей статье Монро мы исследуем

166
00:05:32,960 --> 00:05:34,960
преобразование Фурье как  способ встраивания

167
00:05:34,960 --> 00:05:36,880
цветов, и я дал вам небольшой

168
00:05:36,880 --> 00:05:38,880
рецепт для этого в контексте

169
00:05:38,880 --> 00:05:40,720
блокнота на случай, если вы хотите изучить,

170
00:05:40,720 --> 00:05:42,720
что это очень эффективно, но это

171
00:05:42,720 --> 00:05:44,479
необязательно, и могут быть другие

172
00:05:44,479 --> 00:05:46,080
схемы представления, которые даже

173
00:05:46,080 --> 00:05:49,280
лучше и стоят  изучение

174
00:05:49,280 --> 00:05:51,360
вопроса 3 предлагает вам подумать о богатой

175
00:05:51,360 --> 00:05:53,360
инициализации или предварительном обучении для вашей

176
00:05:53,360 --> 00:05:55,039
модели, мы много работали с встраиванием GloVe перед цепочкой,

177
00:05:55,039 --> 00:05:56,880
и это шанс

178
00:05:56,880 --> 00:05:58,560
для вас внести их в свою модель

179
00:05:58,560 --> 00:06:00,240
и посмотреть, насколько хорошо они работают.

180
00:06:00,240 --> 00:06:01,680
имейте в виду, что этот шаг будет

181
00:06:01,680 --> 00:06:04,000
нетривиальным образом взаимодействовать с

182
00:06:04,000 --> 00:06:06,639
выбором, который вы делаете для своего токенизатора,

183
00:06:06,639 --> 00:06:08,400
и четвертый вопрос является наиболее сложным,

184
00:06:08,400 --> 00:06:10,160
который включает в себя некоторые настоящие

185
00:06:10,160 --> 00:06:12,479
концептуальные споры о круговых факелах, что мы просим

186
00:06:12,479 --> 00:06:14,560
вас сделать, это позаимствовать трюк из

187
00:06:14,560 --> 00:06:16,880
monroe at all paper, что мы обнаружили в

188
00:06:16,880 --> 00:06:18,800
этой работе, так это то, что это помогло

189
00:06:18,800 --> 00:06:20,880
напомнить модели во время декодирования, какой

190
00:06:20,880 --> 00:06:22,960
из трех цветов был ее целью, как

191
00:06:22,960 --> 00:06:25,520
мы это сделали, по сути,

192
00:06:25,520 --> 00:06:27,919
взяв встраивание цвета за t  Целью и

193
00:06:27,919 --> 00:06:29,759
добавлением его к встраиванию

194
00:06:29,759 --> 00:06:32,080
каждого из токенов, которые он производил,

195
00:06:32,080 --> 00:06:34,560
как своего рода напоминание

196
00:06:34,560 --> 00:06:36,080
с точки зрения того, как это работает на

197
00:06:36,080 --> 00:06:38,720
уровне кода, есть класс декодера, и вы

198
00:06:38,720 --> 00:06:40,720
должны изменить его так, чтобы входной

199
00:06:40,720 --> 00:06:43,039
вектор  модель на каждом временном шаге - это

200
00:06:43,039 --> 00:06:45,360
не просто встраивание токена, а

201
00:06:45,360 --> 00:06:47,280
объединение этого встраивания с

202
00:06:47,280 --> 00:06:50,000
представлением целевого цвета,

203
00:06:50,000 --> 00:06:51,759
тогда вам нужно изменить класс декодера кодировщика,

204
00:06:51,759 --> 00:06:54,000
чтобы извлечь целевые

205
00:06:54,000 --> 00:06:56,080
цвета и передать их этому классу декодера,

206
00:06:56,080 --> 00:06:57,120


207
00:06:57,120 --> 00:06:58,639
а затем, наконец, здесь  это

208
00:06:58,639 --> 00:07:01,039
интерфейс, который вы используете, измените этот

209
00:07:01,039 --> 00:07:03,199
интерфейс, чтобы он использовал кодировщик вашего декодера,

210
00:07:03,199 --> 00:07:04,720
и это довольно механический

211
00:07:04,720 --> 00:07:06,160
шаг,

212
00:07:06,160 --> 00:07:07,919
когда вы разрабатываете эту проблему,

213
00:07:07,919 --> 00:07:10,319
используйте игрушечные наборы данных, потому что вы не

214
00:07:10,319 --> 00:07:12,240
хотите ждать, пока вы обрабатываете все

215
00:07:12,240 --> 00:07:14,400
цвета  corpus только для того, чтобы узнать, что у вас

216
00:07:14,400 --> 00:07:16,400
есть ошибка низкого уровня, и я также

217
00:07:16,400 --> 00:07:18,160
рекомендую вам опираться на тесты, которые

218
00:07:18,160 --> 00:07:20,160
мы включили в блокнот, чтобы убедиться,

219
00:07:20,160 --> 00:07:21,919
что у вас есть именно то, что нужно.

220
00:07:21,919 --> 00:07:24,000
я предполагаю, что

221
00:07:24,000 --> 00:07:26,400
все эти части встают на свои места, я думаю,

222
00:07:26,400 --> 00:07:28,160
вы обнаружите, что полученные

223
00:07:28,160 --> 00:07:32,479
модели значительно лучше подходят для нашей задачи,

224
00:07:32,880 --> 00:07:34,479
которая приводит нас к исходной системе,

225
00:07:34,479 --> 00:07:36,160
и вот лишь некоторые ожидания относительно

226
00:07:36,160 --> 00:07:37,599
того, как, по нашему мнению, вы могли бы работать над этой

227
00:07:37,599 --> 00:07:38,560
проблемой.

228
00:07:38,560 --> 00:07:40,240
вы могли бы итеративно улучшить свои

229
00:07:40,240 --> 00:07:41,919
ответы на вопросы задания как

230
00:07:41,919 --> 00:07:44,000
часть исходной системы изменить

231
00:07:44,000 --> 00:07:46,000
токенизатор подумать о встраиваниях ваших GloVe

232
00:07:46,000 --> 00:07:47,759
подумать о том, как вы

233
00:07:47,759 --> 00:07:49,759
представляете цвета и о том, как все

234
00:07:49,759 --> 00:07:52,000
эти части взаимодействуют

235
00:07:52,000 --> 00:07:53,919
вы, возможно, захотите расширить декодер модифицированного

236
00:07:53,919 --> 00:07:55,840
кодировщика  классы, чтобы делать новые и

237
00:07:55,840 --> 00:07:57,759
интересные вещи, и я предоставил

238
00:07:57,759 --> 00:07:59,120
руководство о том, как сделать это на

239
00:07:59,120 --> 00:08:01,440
механическом уровне в тетради с обзором цветов.

240
00:08:01,440 --> 00:08:04,000


241
00:08:04,080 --> 00:08:06,479
Любые данные, которые вы можете найти, можно использовать

242
00:08:06,479 --> 00:08:07,759
для разработки и для

243
00:08:07,759 --> 00:08:10,319
обучения вашей исходной системы.

244
00:08:10,319 --> 00:08:12,560
тестовый набор,

245
00:08:12,560 --> 00:08:14,000
который никогда нигде не выпускался

246
00:08:14,000 --> 00:08:16,479
до того, как он просто использовался в этом контексте,

247
00:08:16,479 --> 00:08:18,800
он имеет те же виды цветового контекста,

248
00:08:18,800 --> 00:08:20,879
что и в отн.  упрощенный корпус,

249
00:08:20,879 --> 00:08:22,800
но это были одноразовые игры, а не

250
00:08:22,800 --> 00:08:24,479
повторные игры, и я действительно думаю, что

251
00:08:24,479 --> 00:08:26,479
это делает этот тестовый набор немного проще,

252
00:08:26,479 --> 00:08:28,879
чем обучающий набор,

253
00:08:28,879 --> 00:08:30,160
и все элементы были проверены слушателем,

254
00:08:30,160 --> 00:08:31,280
поэтому я думаю, что все

255
00:08:31,280 --> 00:08:32,640
описания в принципе являются хорошими

256
00:08:32,640 --> 00:08:34,799
описаниями на  на человеческом уровне, и поэтому это

257
00:08:34,799 --> 00:08:39,079
должно быть хорошей основой для оценки

258
00:08:41,599 --> 00:08:43,680
вас

