1
00:00:05,120 --> 00:00:06,640
приветствуем всех в третьей части нашей

2
00:00:06,640 --> 00:00:07,839
серии статей об обоснованном понимании языка.

3
00:00:07,839 --> 00:00:10,320
Вспомним, что во второй части мы

4
00:00:10,320 --> 00:00:12,320
сосредоточились на говорящих. говорящие в нашем

5
00:00:12,320 --> 00:00:13,759
смысле принимают нелингвистические

6
00:00:13,759 --> 00:00:16,160
представления в качестве входных данных и генерируют

7
00:00:16,160 --> 00:00:18,240
язык на этой основе.

8
00:00:18,240 --> 00:00:19,920


9
00:00:19,920 --> 00:00:22,400
и

10
00:00:22,400 --> 00:00:24,160
попытайтесь сделать предположение о

11
00:00:24,160 --> 00:00:25,680
состоянии мира на основе этого

12
00:00:25,680 --> 00:00:27,279
лингвистического ввода

13
00:00:27,279 --> 00:00:29,279
для этого модуля, поскольку с точки зрения моделирования

14
00:00:29,279 --> 00:00:31,599
наше внимание будет сосредоточено на говорящих, но

15
00:00:31,599 --> 00:00:32,880
я думаю, что полезно иметь

16
00:00:32,880 --> 00:00:34,640
в виду точку зрения слушателя, когда вы

17
00:00:34,640 --> 00:00:36,960
создаете  говорящих, и вы можете даже включить

18
00:00:36,960 --> 00:00:38,800
точку зрения слушателя как часть

19
00:00:38,800 --> 00:00:41,120
вашей исходной системы, и я расскажу о некоторых

20
00:00:41,120 --> 00:00:42,960
методах для этого в

21
00:00:42,960 --> 00:00:44,960
контексте модели рациональной речи x чуть

22
00:00:44,960 --> 00:00:47,280
позже в этой серии,

23
00:00:47,280 --> 00:00:49,440
чтобы сделать тест говорящего значимым, что

24
00:00:49,440 --> 00:00:51,760
нам нужно  чтобы немного усложнить нашу предыдущую

25
00:00:51,760 --> 00:00:54,239
задачу, поэтому во второй части у нас был

26
00:00:54,239 --> 00:00:56,480
для говорящего только один цвет в качестве входных данных,

27
00:00:56,480 --> 00:00:58,160
и их задача состояла в том, чтобы создать

28
00:00:58,160 --> 00:01:00,399
описание  В качестве основы

29
00:01:00,399 --> 00:01:01,840
для слушателей мы собираемся перейти к

30
00:01:01,840 --> 00:01:03,520
более сложной задаче, и это

31
00:01:03,520 --> 00:01:05,280
задача, которая находится в центре нашего внимания для всего

32
00:01:05,280 --> 00:01:07,520
модуля, она исходит из Стэнфордского

33
00:01:07,520 --> 00:01:10,080
корпуса цветов и контекста, и для этого корпуса

34
00:01:10,080 --> 00:01:12,080
контекст представляет собой не просто представление одного цвета,

35
00:01:12,080 --> 00:01:14,479
а  теперь три цвета,

36
00:01:14,479 --> 00:01:16,240
и идея состоит в том, что говорящему в

37
00:01:16,240 --> 00:01:18,400
частном порядке говорят, какой из этих трех является

38
00:01:18,400 --> 00:01:20,320
его целью, и они создают

39
00:01:20,320 --> 00:01:22,000
описание, которое, как мы надеемся,

40
00:01:22,000 --> 00:01:24,320
сообщит слушателю, который смотрит

41
00:01:24,320 --> 00:01:26,560
на те же три цвета, какой из них

42
00:01:26,560 --> 00:01:28,560
был целью говорящего,

43
00:01:28,560 --> 00:01:29,840
вы можете видеть, что это  становится действительно

44
00:01:29,840 --> 00:01:31,759
интересным и очень быстро приземляется, поэтому

45
00:01:31,759 --> 00:01:33,759
в этом первом случае три цвета

46
00:01:33,759 --> 00:01:35,680
очень разные, и говорящий просто

47
00:01:35,680 --> 00:01:37,520
сказал синий, и это, кажется,

48
00:01:37,520 --> 00:01:39,439
выполнило свою работу, и я думаю, что слушатель, получающий

49
00:01:39,439 --> 00:01:41,200
синий в качестве входных данных, будет знать, какой из этих

50
00:01:41,200 --> 00:01:43,119
трех цветов был  личная цель говорящего,

51
00:01:43,119 --> 00:01:44,240


52
00:01:44,240 --> 00:01:45,680
когда мы перешли ко второму контексту,

53
00:01:45,680 --> 00:01:47,520
хотя у нас есть два конкурирующих синих

54
00:01:47,520 --> 00:01:49,840


55
00:01:49,840 --> 00:01:52,240
цвета, они очень похожи, и в результате говорящий сказал, что более темно-синий  один, и

56
00:01:52,240 --> 00:01:54,479
идея состоит в том, что этот сравнительный здесь

57
00:01:54,479 --> 00:01:57,119
более темно-синий делает имплицитную ссылку

58
00:01:57,119 --> 00:01:59,520
не только на цель, но, по

59
00:01:59,520 --> 00:02:02,079
крайней мере, на один из двух отвлекающих факторов.

60
00:02:02,079 --> 00:02:04,079


61
00:02:04,079 --> 00:02:06,000


62
00:02:06,000 --> 00:02:07,840


63
00:02:07,840 --> 00:02:09,840
говорящий не только идентифицирует

64
00:02:09,840 --> 00:02:11,599
свойства цели, но и

65
00:02:11,599 --> 00:02:13,840
свойства отвлекающего фактора, чтобы

66
00:02:13,840 --> 00:02:15,920
выявить контрасты,

67
00:02:15,920 --> 00:02:17,920
и я думаю, что последние два примера

68
00:02:17,920 --> 00:02:20,160
здесь интересны по-разному,

69
00:02:20,160 --> 00:02:21,760
поэтому здесь у нас

70
00:02:21,760 --> 00:02:23,760
есть цель слева в первом

71
00:02:23,760 --> 00:02:25,840
примере.  говорящий сказал фиолетовый, а

72
00:02:25,840 --> 00:02:28,160
во втором примере говорящий сказал синий,

73
00:02:28,160 --> 00:02:30,480
хотя здесь это идентичные

74
00:02:30,480 --> 00:02:32,879
цвета для целей, причина, по которой мы увидели

75
00:02:32,879 --> 00:02:35,120
различия, заключается в том, что отвлекающие факторы

76
00:02:35,120 --> 00:02:37,200
настолько разные, и это просто показывает вам,

77
00:02:37,200 --> 00:02:38,800
что, хотя это простая задача,

78
00:02:38,800 --> 00:02:41,120
она  осмысленно основанные на полном

79
00:02:41,120 --> 00:02:44,080
контексте, о котором мы сейчас говорим,

80
00:02:44,080 --> 00:02:45,680
что мы сделаем для наших слушателей, так это

81
00:02:45,680 --> 00:02:46,800
по существу дадим им эти

82
00:02:46,800 --> 00:02:48,879
высказывания в качестве входных данных и  пусть они

83
00:02:48,879 --> 00:02:50,959
функционируют как классификаторы, делая предположения

84
00:02:50,959 --> 00:02:53,120
о том, какой из трех цветов является

85
00:02:53,120 --> 00:02:55,440
наиболее вероятным, что говорящий

86
00:02:55,440 --> 00:02:57,599
пытался сослаться,

87
00:02:57,599 --> 00:02:59,120
поэтому немного более подробно вот

88
00:02:59,120 --> 00:03:01,280
модель нейронного слушателя, это снова

89
00:03:01,280 --> 00:03:03,360
архитектура декодера кодировщика для

90
00:03:03,360 --> 00:03:05,440
стороны кодировщика, которую мы можем  представьте себе некоторую

91
00:03:05,440 --> 00:03:06,959
рекуррентную нейронную сеть или что-то,

92
00:03:06,959 --> 00:03:08,640
что будет потреблять последовательность

93
00:03:08,640 --> 00:03:09,760
токенов,

94
00:03:09,760 --> 00:03:11,519
искать их в пространстве встраивания, а

95
00:03:11,519 --> 00:03:14,720
затем иметь некоторую последовательность скрытых состояний

96
00:03:14,720 --> 00:03:16,800
для декодера, предположительно, передача обслуживания происходит

97
00:03:16,800 --> 00:03:19,360
для конечного состояния кодировщика, и

98
00:03:19,360 --> 00:03:21,280
что мы собираемся  здесь нужно извлечь

99
00:03:21,280 --> 00:03:23,360
некоторую статистику, в данном случае среднее значение

100
00:03:23,360 --> 00:03:26,080
и ковариационную матрицу, и использовать их для

101
00:03:26,080 --> 00:03:28,720
подсчета очков, поэтому, немного более подробно,

102
00:03:28,720 --> 00:03:30,640
у нас есть те три цвета, которые даны

103
00:03:30,640 --> 00:03:33,040
для слушателя, которые представлены

104
00:03:33,040 --> 00:03:35,280
здесь, мы встроим их в какое-то цветовое

105
00:03:35,280 --> 00:03:37,440
пространство.  мы можем использовать преобразование Фурье

106
00:03:37,440 --> 00:03:39,120
так же, как мы делали для динамиков в

107
00:03:39,120 --> 00:03:41,440
конце предыдущего скринкаста,

108
00:03:41,440 --> 00:03:43,040
а затем мы будем использовать эти извлеченные

109
00:03:43,040 --> 00:03:45,040
статистические данные из кодирования  r, чтобы создать

110
00:03:45,040 --> 00:03:46,640
функцию оценки,

111
00:03:46,640 --> 00:03:47,840
а затем нам просто нужно разделить

112
00:03:47,840 --> 00:03:49,840
классификатор softmax поверх этих

113
00:03:49,840 --> 00:03:52,319
оценок, и именно этот

114
00:03:52,319 --> 00:03:54,799
модуль сделает предположение на основе этого

115
00:03:54,799 --> 00:03:57,200
представления кодировщика о том, какой из трех

116
00:03:57,200 --> 00:03:59,360
цветов имел в виду говорящий.

117
00:03:59,360 --> 00:04:01,519
своего рода классификационное

118
00:04:01,519 --> 00:04:03,920
решение в этом непрерывном пространстве

119
00:04:03,920 --> 00:04:08,159
цветов и представлений кодировщика

120
00:04:08,400 --> 00:04:10,159
теперь, когда мы начинаем думать в этом режиме,

121
00:04:10,159 --> 00:04:12,640
я думаю, что многие другие задачи можно

122
00:04:12,640 --> 00:04:14,480
рассматривать как

123
00:04:14,480 --> 00:04:17,279
тесты связи на основе слушателей, поэтому даже самые простые

124
00:04:17,279 --> 00:04:19,759
классификаторы являются слушателями в нашем смысле

125
00:04:19,759 --> 00:04:22,000
они потребляют  языке, и они делают

126
00:04:22,000 --> 00:04:23,759
выводы о мире, как правило, в

127
00:04:23,759 --> 00:04:26,160
очень структурированном пространстве, так что, даже как

128
00:04:26,160 --> 00:04:27,680
в простом случае нашего анализа настроений,

129
00:04:27,680 --> 00:04:30,160
вы получаете лингвистическую информацию

130
00:04:30,160 --> 00:04:31,680
и делаете предположение о том,

131
00:04:31,680 --> 00:04:34,080
является ли состояние положительно-отрицательным или нейтральным.

132
00:04:34,080 --> 00:04:36,320
классификатор, но

133
00:04:36,320 --> 00:04:38,720
если рассматривать его как коммуникативную задачу, это

134
00:04:38,720 --> 00:04:40,320
может привести к новым измерениям

135
00:04:40,320 --> 00:04:42,240
проблемы.

136
00:04:42,240 --> 00:04:44,560
Семантические синтаксические анализаторы также сложны.

137
00:04:44,560 --> 00:04:46,560
Истинеры используют язык, они

138
00:04:46,560 --> 00:04:48,720
создают богатые скрытые представления в

139
00:04:48,720 --> 00:04:50,800
виде логической формы, а затем они

140
00:04:50,800 --> 00:04:52,800
предсказывают в некое структурированное пространство предсказаний,

141
00:04:52,800 --> 00:04:54,639
такое как база данных или что-то вроде того,

142
00:04:54,639 --> 00:04:56,479
что

143
00:04:56,479 --> 00:04:58,639
генерация сцены явно является своего рода

144
00:04:58,639 --> 00:05:01,759
задачей слушателя в этой задаче, которую вы отображаете из

145
00:05:01,759 --> 00:05:04,000
языка в структурированные

146
00:05:04,000 --> 00:05:05,919
представления  визуальные сцены,

147
00:05:05,919 --> 00:05:07,680
так что это очень сложная версия

148
00:05:07,680 --> 00:05:09,360
нашей простой простой проблемы с эталоном цвета. Все

149
00:05:09,360 --> 00:05:10,800


150
00:05:10,800 --> 00:05:12,400
молодые люди исследовали идею о том, что мы

151
00:05:12,400 --> 00:05:14,240
можем изучать визуальные обозначения для

152
00:05:14,240 --> 00:05:16,080
лингвистических выражений, отображаемых из

153
00:05:16,080 --> 00:05:18,479
языка в некое высокоструктурированное

154
00:05:18,479 --> 00:05:22,320
пространство, подобное описанию сцены.

155
00:05:22,320 --> 00:05:24,720


156
00:05:24,720 --> 00:05:26,960
модель последовательности, которая очень похожа на

157
00:05:26,960 --> 00:05:29,039
приведенную выше, но идея состоит в том, что вместо

158
00:05:29,039 --> 00:05:29,919


159
00:05:29,919 --> 00:05:33,360
простых выходных пространств у нас есть целые

160
00:05:33,360 --> 00:05:35,199
навигационные инструкции, которые мы хотим

161
00:05:35,199 --> 00:05:36,320
дать, чтобы они переходили от

162
00:05:36,320 --> 00:05:38,000
лингвистического ввода к какой-то

163
00:05:38,000 --> 00:05:40,639
последовательности действий

164
00:05:40,639 --> 00:05:42,639
и, наконец, к набору данных последовательных полос.

165
00:05:42,639 --> 00:05:44,400
интересно исследовать в нашем

166
00:05:44,400 --> 00:05:45,600
контексте,

167
00:05:45,600 --> 00:05:47,440
который был в  попросите научиться

168
00:05:47,440 --> 00:05:49,199
выполнять полные инструкции, так что это

169
00:05:49,199 --> 00:05:51,120
снова отображение довольно сложных

170
00:05:51,120 --> 00:05:54,240
высказываний в какое-то встроенное действие,

171
00:05:54,240 --> 00:05:56,319
которое вы хотите выполнить в игровом мире,

172
00:05:56,319 --> 00:05:58,080
и это может быть очень захватывающим

173
00:05:58,080 --> 00:05:59,520
расширением того, что мы только что рассмотрели

174
00:05:59,520 --> 00:06:02,520


