1
00:00:05,120 --> 00:00:07,680
В прошлый раз, когда я представил задачу

2
00:00:07,680 --> 00:00:10,000
извлечения отношений, я

3
00:00:10,000 --> 00:00:12,639
описал корпус и базу знаний, которые

4
00:00:12,639 --> 00:00:13,920
мы собираемся использовать

5
00:00:13,920 --> 00:00:17,119
, и предложил точную формулировку

6
00:00:17,119 --> 00:00:18,880
нашей задачи прогнозирования,

7
00:00:18,880 --> 00:00:20,720
так что теперь давайте поговорим о том, как мы

8
00:00:20,720 --> 00:00:23,680
собираемся измерять успех в этой проблеме, которую мы

9
00:00:23,680 --> 00:00:26,560
необходимо определить количественную оценку,

10
00:00:26,560 --> 00:00:29,279
которая может управлять процессом итеративной

11
00:00:29,279 --> 00:00:31,519
разработки.

12
00:00:31,519 --> 00:00:32,960
В этом разделе я собираюсь сначала

13
00:00:32,960 --> 00:00:35,200
установить связь с принципом разработки программного обеспечения разработки через

14
00:00:35,200 --> 00:00:38,320
тестирование, а

15
00:00:38,320 --> 00:00:40,480
затем я собираюсь объяснить, как мы

16
00:00:40,480 --> 00:00:42,239
разделим наши данные на  данные обучения и

17
00:00:42,239 --> 00:00:44,879
оценки, я сделаю краткий

18
00:00:44,879 --> 00:00:48,719
обзор точного отзыва и измерения f,

19
00:00:48,719 --> 00:00:50,000


20
00:00:50,000 --> 00:00:51,520
а также рассмотрю различие между

21
00:00:51,520 --> 00:00:54,079
микроусреднением и макроусреднением,

22
00:00:54,079 --> 00:00:56,079
и к концу мы будем точно знать, как

23
00:00:56,079 --> 00:00:59,800
мы будем измерять успех,

24
00:01:00,000 --> 00:01:01,680
когда вы начнете работать.  при решении новой

25
00:01:01,680 --> 00:01:04,959
задачи машинного обучения очень заманчиво

26
00:01:04,959 --> 00:01:07,600
прыгнуть и начать строить модели сразу

27
00:01:07,600 --> 00:01:08,880
же, потому

28
00:01:08,880 --> 00:01:11,040
что вы переполнены идеями, и вам не

29
00:01:11,040 --> 00:01:12,720
терпится приступить к работе,

30
00:01:12,720 --> 00:01:13,439
но

31
00:01:13,439 --> 00:01:16,000
черт возьми, это как  Если вы едете по

32
00:01:16,000 --> 00:01:18,560
пересеченной местности без карты,

33
00:01:18,560 --> 00:01:21,040
на дороге будет много развилок, и

34
00:01:21,040 --> 00:01:23,040
вы не будете знать, в какую сторону идти,

35
00:01:23,040 --> 00:01:25,840
есть лучший способ

36
00:01:25,840 --> 00:01:28,080
разработки программного обеспечения. Мы используем

37
00:01:28,080 --> 00:01:31,680
разработку через тестирование.

38
00:01:31,680 --> 00:01:34,640


39
00:01:34,640 --> 00:01:37,040
пройти тесты

40
00:01:37,040 --> 00:01:38,560
в моделировании мы можем использовать

41
00:01:38,560 --> 00:01:41,280
аналогичную парадигму сначала реализовать

42
00:01:41,280 --> 00:01:43,920
количественную оценку указать свой

43
00:01:43,920 --> 00:01:45,759
набор данных оценки

44
00:01:45,759 --> 00:01:48,159
выбрать свою метрику оценки построить

45
00:01:48,159 --> 00:01:50,640
тестовую систему, которая берет модель и

46
00:01:50,640 --> 00:01:52,960
генерирует оценку

47
00:01:52,960 --> 00:01:55,360
затем, когда вы начнете строить модели,

48
00:01:55,360 --> 00:01:57,759
вы сможете он поднимется  на этот счет и на

49
00:01:57,759 --> 00:01:59,439
тех развилках дороги, где вы могли бы

50
00:01:59,439 --> 00:02:02,079
сделать это так или иначе, ваша

51
00:02:02,079 --> 00:02:04,240
количественная оценка подскажет вам, в

52
00:02:04,240 --> 00:02:07,880
каком направлении идти

53
00:02:08,000 --> 00:02:09,758
сейчас, когда бы мы ни строили модель из данных.

54
00:02:09,758 --> 00:02:12,480


55
00:02:12,480 --> 00:02:14,239


56
00:02:14,239 --> 00:02:17,360
тренировочный сплит и тестовый

57
00:02:17,360 --> 00:02:18,959
сплит, на

58
00:02:18,959 --> 00:02:20,879
самом деле здесь мы пойдем немного дальше и

59
00:02:20,879 --> 00:02:23,599
сначала определим несколько сплитов, у нас

60
00:02:23,599 --> 00:02:26,879
будет крошечный сплит всего с одним

61
00:02:26,879 --> 00:02:28,319
процентом данных

62
00:02:28,319 --> 00:02:31,120
наличие крошечного разделения очень полезно, и

63
00:02:31,120 --> 00:02:33,360
я призываю вас применять эту практику

64
00:02:33,360 --> 00:02:34,879
всякий раз, когда вы беретесь за новую

65
00:02:34,879 --> 00:02:37,440
задачу прогнозирования на ранних стадиях

66
00:02:37,440 --> 00:02:39,920
разработки. Вы можете использовать крошечное разделение в

67
00:02:39,920 --> 00:02:43,519
качестве обучающих данных или тестовых данных, или и того, и другого,

68
00:02:43,519 --> 00:02:47,440
и ваши эксперименты будут работать очень быстро.

69
00:02:47,440 --> 00:02:49,920
конечно, ваши количественные оценки

70
00:02:49,920 --> 00:02:52,080
будут в значительной степени бессмысленными, но

71
00:02:52,080 --> 00:02:54,160
это отличный способ быстро избавиться от любых

72
00:02:54,160 --> 00:02:57,040
ошибок в вашей настройке,

73
00:02:57,040 --> 00:02:59,200
тогда у нас будет разделение поезда с 74

74
00:02:59,200 --> 00:03:00,720
процентами данных, это данные,

75
00:03:00,720 --> 00:03:02,319
которые мы обычно используем для модели.

76
00:03:02,319 --> 00:03:03,920
обучение,

77
00:03:03,920 --> 00:03:07,840
затем раздел разработчиков с 25 данными, которые

78
00:03:07,840 --> 00:03:10,560
мы будем использовать в качестве тестовых данных для

79
00:03:10,560 --> 00:03:12,239
промежуточных оценок во время

80
00:03:12,239 --> 00:03:13,840
разработки,

81
00:03:13,840 --> 00:03:15,280
а для выпечки у нас также

82
00:03:15,280 --> 00:03:17,360
будет отдельный тестовый раздел,

83
00:03:17,360 --> 00:03:19,360
но у вас не будет доступа к нему, поэтому мы

84
00:03:19,360 --> 00:03:22,080
не буду говорить об этом здесь,

85
00:03:22,080 --> 00:03:23,920
есть одна сложность, которую нам нужно

86
00:03:23,920 --> 00:03:27,440
разделить как на корпус, так и на kb,

87
00:03:27,440 --> 00:03:30,080
мы хотим, чтобы каждое отношение появлялось как

88
00:03:30,080 --> 00:03:32,480
в обучающих данных, так и в тестовых данных,

89
00:03:32,480 --> 00:03:34,080
чтобы мы могли оценить, насколько хорошо мы

90
00:03:34,080 --> 00:03:36,080
узнали, как e  каждое отношение

91
00:03:36,080 --> 00:03:38,799
выражается на естественном языке,

92
00:03:38,799 --> 00:03:41,040
но в идеале мы хотели бы, чтобы любая данная

93
00:03:41,040 --> 00:03:42,080
сущность

94
00:03:42,080 --> 00:03:44,400
появлялась только в одном разделении,

95
00:03:44,400 --> 00:03:46,000
иначе мы могли бы просачивать

96
00:03:46,000 --> 00:03:47,760
информацию из обучающих данных

97
00:03:47,760 --> 00:03:50,480
в тестовые данные

98
00:03:50,879 --> 00:03:53,280
в идеальном мире, у каждого разделения была бы

99
00:03:53,280 --> 00:03:55,920
своя собственная герметически закрытая вселенная.

100
00:03:55,920 --> 00:03:58,799
сущностей, и как корпус, так и kb

101
00:03:58,799 --> 00:04:01,200
для этого разделения будут относиться только к этим

102
00:04:01,200 --> 00:04:03,519
сущностям, поэтому, например, у вас может быть

103
00:04:03,519 --> 00:04:05,760
корпус нового мира, в примерах которого упоминаются

104
00:04:05,760 --> 00:04:08,560
только новые мировые сущности, такие как Илон Маск

105
00:04:08,560 --> 00:04:10,799
, Билл Гейтс и Стив Джобс,

106
00:04:10,799 --> 00:04:14,159
и новый мир kb, который  содержит только

107
00:04:14,159 --> 00:04:16,720
триплеты об одних и тех же объектах нового мира,

108
00:04:16,720 --> 00:04:18,399


109
00:04:18,399 --> 00:04:20,959
а затем корпус старого старого мира, в котором

110
00:04:20,959 --> 00:04:23,199
рассказывается о Даниэле Эке, Джеке Ма и

111
00:04:23,199 --> 00:04:24,720
пони Ма,

112
00:04:24,720 --> 00:04:28,479
и соответствующем старом мире kb,

113
00:04:28,479 --> 00:04:30,240
если бы у нас это было, мы могли бы добиться

114
00:04:30,240 --> 00:04:33,199
действительно четкого разделения между

115
00:04:33,199 --> 00:04:36,000
данными поезда и тестами  без перекрытия

116
00:04:36,000 --> 00:04:38,400
сущностей,

117
00:04:38,400 --> 00:04:40,320
но на практике мир сильно

118
00:04:40,320 --> 00:04:43,040
запутан, и этого идеала трудно

119
00:04:43,040 --> 00:04:44,960
достичь, поэтому вместо этого мы собираемся

120
00:04:44,960 --> 00:04:47,280
приблизиться к идеалу,

121
00:04:47,280 --> 00:04:49,520
я думаю  я не буду останавливаться на деталях, но

122
00:04:49,520 --> 00:04:51,280
мы написали код для вас, чтобы

123
00:04:51,280 --> 00:04:54,160
добиться достаточно хорошего разделения,

124
00:04:54,160 --> 00:04:56,000
в частности, класс набора данных

125
00:04:56,000 --> 00:04:58,720
предоставляет метод, называемый разделением построения, который позволяет

126
00:04:58,720 --> 00:05:01,280
вам указать имена

127
00:05:01,280 --> 00:05:02,160
и

128
00:05:02,160 --> 00:05:04,960
пропорции разделения и случайное начальное число,

129
00:05:04,960 --> 00:05:07,840
и он просто возвращает  карта от разделенных

130
00:05:07,840 --> 00:05:10,960
имен к наборам данных, каждый из которых содержит

131
00:05:10,960 --> 00:05:14,160
корпус и kb,

132
00:05:14,160 --> 00:05:15,919
так что теперь, когда у нас есть наши разбиения, нам

133
00:05:15,919 --> 00:05:18,479
нужно выбрать метрику оценки, которую

134
00:05:18,479 --> 00:05:20,880
мы сформулировали как двоичную

135
00:05:20,880 --> 00:05:22,800
классификацию, а стандартные метрики

136
00:05:22,800 --> 00:05:25,199
для двоичной классификации - это точность

137
00:05:25,199 --> 00:05:27,680
и полнота, поэтому  вот пример, где у

138
00:05:27,680 --> 00:05:30,720
нас есть сто экземпляров

139
00:05:30,720 --> 00:05:32,960
проблемы строки этой таблицы представляют собой

140
00:05:32,960 --> 00:05:36,400
фактические метки 88 помечены как ложные, и

141
00:05:36,400 --> 00:05:38,560
только 12 помечены как истинные,

142
00:05:38,560 --> 00:05:41,600
поэтому это искаженное

143
00:05:41,600 --> 00:05:43,919
распределение столбцы этой таблицы представляют

144
00:05:43,919 --> 00:05:47,280
метки, предсказанные нашей моделью, поэтому 95

145
00:05:47,280 --> 00:05:50,880
предсказано как ложное и 5 истинных,

146
00:05:50,880 --> 00:05:54,160
теперь есть 89 случаев, когда

147
00:05:54,160 --> 00:05:56,479
предсказанная метка согласуется с фактической

148
00:05:56,479 --> 00:05:59,360
меткой, поэтому точность этой модели составляет

149
00:05:59,360 --> 00:06:01,520
89,

150
00:06:01,520 --> 00:06:04,000
но точность не  отличная оценочная

151
00:06:04,000 --> 00:06:06,160
метрика, особенно когда у вас такое асимметричное

152
00:06:06,160 --> 00:06:08,080
распределение,

153
00:06:08,080 --> 00:06:10,639
потому что даже модель, которая игнорирует

154
00:06:10,639 --> 00:06:11,600
данные

155
00:06:11,600 --> 00:06:14,960
и всегда угадывает ложь, может получить точность 88,

156
00:06:14,960 --> 00:06:18,880
просто всегда угадывая ложь,

157
00:06:18,880 --> 00:06:21,120
поэтому вместо точности мы смотрим на

158
00:06:21,120 --> 00:06:24,080
точность, которая говорит о предсказанных экземплярах.

159
00:06:24,080 --> 00:06:26,400
чтобы быть правдой, какая

160
00:06:26,400 --> 00:06:29,120
пропорция на самом деле верна,

161
00:06:29,120 --> 00:06:32,240
и вспомните, что говорит о случаях,

162
00:06:32,240 --> 00:06:34,560
которые на самом деле верны, какая

163
00:06:34,560 --> 00:06:37,680
пропорция предсказана как истина,

164
00:06:37,680 --> 00:06:41,039
так что большая точность и отзыв

165
00:06:41,039 --> 00:06:43,039
действительно полезны,

166
00:06:43,039 --> 00:06:43,840
но

167
00:06:43,840 --> 00:06:46,840
иметь две оценочные метрики часто

168
00:06:46,840 --> 00:06:49,280
неудобно, если мы рассматриваем

169
00:06:49,280 --> 00:06:51,520
изменение  для нашей модели, которая повышает

170
00:06:51,520 --> 00:06:52,560
точность,

171
00:06:52,560 --> 00:06:54,880
но ухудшает отзыв,

172
00:06:54,880 --> 00:06:56,800
если мы возьмем

173
00:06:56,800 --> 00:06:58,560
ее для управления итеративным

174
00:06:58,560 --> 00:07:00,800
процессом разработки, полезно

175
00:07:00,800 --> 00:07:02,479
иметь единую метрику,

176
00:07:02,479 --> 00:07:05,599
по которой можно подниматься,

177
00:07:06,240 --> 00:07:07,680
поэтому для бинарной классификации

178
00:07:07,680 --> 00:07:10,479
стандартным ответом является оценка f1, которая

179
00:07:10,479 --> 00:07:12,240
является гармоническим средним значением

180
00:07:12,240 --> 00:07:14,800
точности  и помните,

181
00:07:14,800 --> 00:07:16,560
что среднее гармоническое

182
00:07:16,560 --> 00:07:19,039
является обратной величиной среднего

183
00:07:19,039 --> 00:07:22,880
арифметического среднего  rocals, и это

184
00:07:22,880 --> 00:07:26,160
всегда меньше среднего арифметического,

185
00:07:26,160 --> 00:07:28,240
это пессимистично в том смысле, что оно

186
00:07:28,240 --> 00:07:30,639
всегда ближе к меньшему числу,

187
00:07:30,639 --> 00:07:34,400
поэтому среднее арифметическое 60 и

188
00:07:34,400 --> 00:07:37,120
25 жаль, что среднее гармоническое 60 и 25

189
00:07:37,120 --> 00:07:40,680
процентов составляет 35,3,

190
00:07:41,440 --> 00:07:44,720
теперь оценка f1 дает равный

191
00:07:44,720 --> 00:07:47,199
вес  точность и полнота,

192
00:07:47,199 --> 00:07:49,440
но в зависимости от приложения они

193
00:07:49,440 --> 00:07:52,960
могут иметь разное значение

194
00:07:52,960 --> 00:07:55,759
при извлечении отношений, мы, вероятно,

195
00:07:55,759 --> 00:07:59,520
больше заботимся о точности, чем о полноте,

196
00:07:59,520 --> 00:08:01,840
и это потому, что добавление недопустимой

197
00:08:01,840 --> 00:08:03,599
тройки в

198
00:08:03,599 --> 00:08:05,520
kb более вредно,

199
00:08:05,520 --> 00:08:10,080
чем отсутствие добавления действительной,

200
00:08:10,080 --> 00:08:11,919
поэтому вместо этого мы могли бы  используйте меру f,

201
00:08:11,919 --> 00:08:14,240
которая является обобщением f1, это

202
00:08:14,240 --> 00:08:17,039
взвешенное гармоническое среднее значение точности и

203
00:08:17,039 --> 00:08:20,639
полноты, и этот бета-параметр определяет,

204
00:08:20,639 --> 00:08:23,120
насколько большее значение вы

205
00:08:23,120 --> 00:08:24,240
придаете полноте,

206
00:08:24,240 --> 00:08:26,560
чем точности,

207
00:08:26,560 --> 00:08:27,840
поэтому скажем, что в конкретной

208
00:08:27,840 --> 00:08:30,319
оценке у вас есть высокая точность 80

209
00:08:30,319 --> 00:08:34,640
процентов.  и низкая полнота

210
00:08:34,640 --> 00:08:37,839
20. Оценка f1 дает равный вес

211
00:08:37,839 --> 00:08:40,559
точности и полноте, поэтому ее значение составляет 32

212
00:08:40,559 --> 00:08:42,000
процента,

213
00:08:42,000 --> 00:08:44,360
если мы установим бета, равную

214
00:08:44,360 --> 00:08:45,920
0,5,

215
00:08:45,920 --> 00:08:48,399
мы даем  g больше веса для точности,

216
00:08:48,399 --> 00:08:51,600
поэтому значение составляет 50 процентов,

217
00:08:51,600 --> 00:08:54,080
если мы установим бета, равную 2, мы придаем

218
00:08:54,080 --> 00:08:56,839
больший вес отзыву, поэтому значение равно

219
00:08:56,839 --> 00:08:59,600
23,5 процента

220
00:08:59,600 --> 00:09:01,920
в отношении точности извлечения

221
00:09:01,920 --> 00:09:03,519
важнее, чем отзыв,

222
00:09:03,519 --> 00:09:06,560
поэтому давайте примем f 0,5 в качестве нашей оценки.

223
00:09:06,560 --> 00:09:09,839
метрика хорошо, еще одна проблема, которая возникает

224
00:09:09,839 --> 00:09:11,440
в сценариях оценки, подобных этому, заключается в

225
00:09:11,440 --> 00:09:12,959
том, следует ли использовать

226
00:09:12,959 --> 00:09:15,760
микроусреднение или макроусреднение.

227
00:09:15,760 --> 00:09:18,640


228
00:09:18,640 --> 00:09:22,240


229
00:09:22,240 --> 00:09:24,000


230
00:09:24,000 --> 00:09:25,279


231
00:09:25,279 --> 00:09:27,920
метрики, которые

232
00:09:27,920 --> 00:09:30,800
объединяются по всем отношениям,

233
00:09:30,800 --> 00:09:32,160
и есть два возможных способа сделать

234
00:09:32,160 --> 00:09:34,800
это микроусреднение дает равный

235
00:09:34,800 --> 00:09:37,279
вес каждому экземпляру проблемы,

236
00:09:37,279 --> 00:09:39,760
что означает, что он дает больший вес

237
00:09:39,760 --> 00:09:43,040
отношениям с большим количеством экземпляров

238
00:09:43,040 --> 00:09:45,120
макроусреднение просто дает равный

239
00:09:45,120 --> 00:09:46,800
вес каждому отношению,

240
00:09:46,800 --> 00:09:48,320
поэтому позвольте мне показать  вы иллюстрируете

241
00:09:48,320 --> 00:09:50,959
это искусственным примером, где у

242
00:09:50,959 --> 00:09:53,200
меня всего три отношения,

243
00:09:53,200 --> 00:09:56,560
а отношение содержит в десять

244
00:09:56,560 --> 00:09:59,200
раз больше экземпляров  Как и два других

245
00:09:59,200 --> 00:10:01,839
отношения, оно также имеет самый высокий показатель f,

246
00:10:01,839 --> 00:10:03,519


247
00:10:03,519 --> 00:10:05,839
когда я вычисляю микросреднее и

248
00:10:05,839 --> 00:10:09,120
макросреднее. Микросреднее

249
00:10:09,120 --> 00:10:11,120
дает одинаковый вес каждому экземпляру проблемы,

250
00:10:11,120 --> 00:10:12,240


251
00:10:12,240 --> 00:10:14,240
поэтому оно дает гораздо больший вес

252
00:10:14,240 --> 00:10:16,800
отношению содержит, и результат состоит в том,

253
00:10:16,800 --> 00:10:19,440
что  микроусредненная f-оценка очень близка

254
00:10:19,440 --> 00:10:22,079
к f-оценке для содержит, в

255
00:10:22,079 --> 00:10:24,320
то время как макроусреднение дает одинаковый

256
00:10:24,320 --> 00:10:26,320
вес каждому отношению,

257
00:10:26,320 --> 00:10:28,959
и поэтому она находится как раз в середине

258
00:10:28,959 --> 00:10:31,120
этого диапазона.

259
00:10:31,120 --> 00:10:34,640
Микросредняя f-оценка, вероятно,

260
00:10:34,640 --> 00:10:36,160
не то, что нам нужно,

261
00:10:36,160 --> 00:10:38,800
потому  экземпляров на

262
00:10:38,800 --> 00:10:40,079
отношение

263
00:10:40,079 --> 00:10:42,320
является своего рода случайностью нашей методологии сбора данных,

264
00:10:42,320 --> 00:10:44,240


265
00:10:44,240 --> 00:10:46,000
и мы не считаем, что

266
00:10:46,000 --> 00:10:49,440
отношение contains более важно,

267
00:10:49,440 --> 00:10:51,360
чем другие отношения, просто

268
00:10:51,360 --> 00:10:53,279
оказалось, что в данных, которые мы

269
00:10:53,279 --> 00:10:54,720
собрали, их больше,

270
00:10:54,720 --> 00:10:57,040
поэтому мы собираемся  использовать усреднение макросов,

271
00:10:57,040 --> 00:11:01,839
чтобы мы не перевешивали большие отношения,

272
00:11:02,800 --> 00:11:04,880
поэтому, если вы соберете все это вместе, в

273
00:11:04,880 --> 00:11:07,839
итоге получится, что при каждой оценке мы

274
00:11:07,839 --> 00:11:10,000
будем сообщать множество показателей,

275
00:11:10,000 --> 00:11:11,920
но  Есть одна метрика, на которой мы собираемся

276
00:11:11,920 --> 00:11:14,720
сосредоточиться, и это будет наш показатель

277
00:11:14,720 --> 00:11:17,040
качества, это единственное число, на которое мы

278
00:11:17,040 --> 00:11:19,120
собираемся взбираться в гору, и мы выбираем в

279
00:11:19,120 --> 00:11:21,600
качестве нашего показателя качества

280
00:11:21,600 --> 00:11:27,160
усредненный макрос f 0,5.

281
00:11:29,760 --> 00:11:31,839


