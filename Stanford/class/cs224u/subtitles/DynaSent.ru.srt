1
00:00:05,120 --> 00:00:06,720
привет всем, добро пожаловать в четвертую часть

2
00:00:06,720 --> 00:00:08,160
нашей серии, посвященной анализу настроений под наблюдением.

3
00:00:08,160 --> 00:00:10,160
Это второй скринкаст

4
00:00:10,160 --> 00:00:12,160
в серии, посвященный набору данных

5
00:00:12,160 --> 00:00:14,400
для настроений, и этот набор данных является

6
00:00:14,400 --> 00:00:16,160
динамическим. Это видео можно

7
00:00:16,160 --> 00:00:17,840
считать необязательным элементом в

8
00:00:17,840 --> 00:00:20,160
серии i'  Я предлагаю это по двум причинам, на

9
00:00:20,160 --> 00:00:22,160
самом деле, во-первых, это новый набор данных,

10
00:00:22,160 --> 00:00:24,080
который я помог создать, и мне бы понравилось,

11
00:00:24,080 --> 00:00:25,760
если бы люди работали над ним, было бы

12
00:00:25,760 --> 00:00:27,439
здорово увидеть некоторые новые модели, новые

13
00:00:27,439 --> 00:00:28,560
идеи,

14
00:00:28,560 --> 00:00:30,160
все это помогло бы продвинуть этот проект

15
00:00:30,160 --> 00:00:32,399
вперед в  интересные способы, вторая

16
00:00:32,399 --> 00:00:34,000
причина более практична, я думаю, что

17
00:00:34,000 --> 00:00:35,760
этот набор данных может быть полезен для вас, когда

18
00:00:35,760 --> 00:00:37,200
вы работаете над заданием и

19
00:00:37,200 --> 00:00:39,440
связанной с ним выпечкой, вы можете использовать сам

20
00:00:39,440 --> 00:00:41,280
набор данных для дополнительных

21
00:00:41,280 --> 00:00:43,280
данных обучения, вы можете использовать его для

22
00:00:43,280 --> 00:00:45,280
оценки вашей системы и  как вы увидите,

23
00:00:45,280 --> 00:00:47,120
есть несколько точек концептуальной

24
00:00:47,120 --> 00:00:49,680
связи между этим набором данных и

25
00:00:49,680 --> 00:00:51,840
совершенно новыми наборами предложений для разработчиков и тестов

26
00:00:51,840 --> 00:00:54,160
ресторана, которые являются

27
00:00:54,160 --> 00:00:57,199
частью выпечки в этом году,

28
00:00:57,440 --> 00:00:58,800
так что давайте  давайте погрузимся, вот обзор проекта,

29
00:00:58,800 --> 00:01:00,559
сначала весь код данных и

30
00:01:00,559 --> 00:01:02,480
модели доступны на github по этой

31
00:01:02,480 --> 00:01:03,600
ссылке,

32
00:01:03,600 --> 00:01:05,680
сам этот набор данных состоит из

33
00:01:05,680 --> 00:01:08,479
примерно 122 000 предложений,

34
00:01:08,479 --> 00:01:10,320
они разделены на два раунда, и я

35
00:01:10,320 --> 00:01:12,400
собираюсь рассказать, что означает каждый раунд,

36
00:01:12,400 --> 00:01:14,560
и  каждое из предложений имеет пять золотых

37
00:01:14,560 --> 00:01:16,240
меток в дополнение к предполагаемой

38
00:01:16,240 --> 00:01:17,840
метке большинства, где она есть, и

39
00:01:17,840 --> 00:01:19,200
я тоже вернусь к этому, я думаю,

40
00:01:19,200 --> 00:01:21,280
что это интересный аспект такого

41
00:01:21,280 --> 00:01:23,280
рода сбора данных.

42
00:01:23,280 --> 00:01:25,439


43
00:01:25,439 --> 00:01:26,720
прочитать, если вы

44
00:01:26,720 --> 00:01:28,960
хотите узнать еще больше об этом

45
00:01:28,960 --> 00:01:31,600
наборе данных и о том, как, в частности, он связан

46
00:01:31,600 --> 00:01:33,200
со Стэнфордским банком деревьев настроений, наш

47
00:01:33,200 --> 00:01:35,759
другой основной набор данных

48
00:01:35,759 --> 00:01:37,680
и еще один ингредиент здесь, как вы увидите,

49
00:01:37,680 --> 00:01:39,759
когда мы доберемся до второго раунда, заключается в том, что

50
00:01:39,759 --> 00:01:42,000
это частично  усилие в

51
00:01:42,000 --> 00:01:44,320
модели в цикле создание состязательного набора данных

52
00:01:44,320 --> 00:01:47,119
для второго раунда Работники толпы

53
00:01:47,119 --> 00:01:49,040
взаимодействовали с моделью, пытаясь

54
00:01:49,040 --> 00:01:51,200
обмануть ее и тем самым создавая предложения

55
00:01:51,200 --> 00:01:52,560
, которые действительно сложны и будут

56
00:01:52,560 --> 00:01:54,399
бросать вызов o  Наши модели, как мы надеемся

57
00:01:54,399 --> 00:01:57,119
, интересны и продуктивны,

58
00:01:57,119 --> 00:01:59,040
поэтому вот полный обзор проекта,

59
00:01:59,040 --> 00:02:00,320
позвольте мне быстро пройтись по нему, а затем

60
00:02:00,320 --> 00:02:02,479


61
00:02:02,479 --> 00:02:04,320


62
00:02:04,320 --> 00:02:06,560
мы углубимся в детали.

63
00:02:06,560 --> 00:02:08,720
на множестве очень больших

64
00:02:08,720 --> 00:02:10,639
наборов эталонных данных настроений

65
00:02:10,639 --> 00:02:12,800
основная полезность нулевой модели заключается в

66
00:02:12,800 --> 00:02:14,560
том, что мы собираемся использовать ее в качестве устройства

67
00:02:14,560 --> 00:02:16,800
для поиска сложных естественных

68
00:02:16,800 --> 00:02:20,319
предложений в большом корпусе,

69
00:02:20,319 --> 00:02:22,160
а затем мы проверяем их человеком, чтобы получить

70
00:02:22,160 --> 00:02:24,400
фактические метки для

71
00:02:24,400 --> 00:02:27,200
Мы надеемся, что результат этого процесса — это

72
00:02:27,200 --> 00:02:29,280
действительно сложный набор данных первого раунда из

73
00:02:29,280 --> 00:02:31,440
естественных предложений, которые

74
00:02:31,440 --> 00:02:33,599
сложны для очень хорошей модели настроений,

75
00:02:33,599 --> 00:02:35,680
такой как нулевая модель,

76
00:02:35,680 --> 00:02:38,640
на этой основе мы затем обучаем модель один,

77
00:02:38,640 --> 00:02:40,879
которая похожа на нулевую модель.  но теперь

78
00:02:40,879 --> 00:02:42,879
дополнен данными обучения первого раунда,

79
00:02:42,879 --> 00:02:45,120
поэтому мы надеемся, что, введя эти

80
00:02:45,120 --> 00:02:47,120
новые данные и объединив их с

81
00:02:47,120 --> 00:02:49,280
контрольными показателями настроений, мы получим еще

82
00:02:49,280 --> 00:02:50,879
более сильную модель,

83
00:02:50,879 --> 00:02:52,720
которая является моделью, которая толпит  сотрудники

84
00:02:52,720 --> 00:02:54,480
взаимодействовали на платформе dynabench,

85
00:02:54,480 --> 00:02:56,560
чтобы попытаться создать примеры,

86
00:02:56,560 --> 00:02:58,879
которые противоречат

87
00:02:58,879 --> 00:03:01,040
первой модели, поэтому они должны быть действительно сложными,

88
00:03:01,040 --> 00:03:02,800
мы пропускаем их через точно такой же

89
00:03:02,800 --> 00:03:04,800
конвейер проверки вручную, и это дает

90
00:03:04,800 --> 00:03:07,440
нам второй раунд данных,

91
00:03:07,440 --> 00:03:08,720
поэтому два раунда  данные, которые можно

92
00:03:08,720 --> 00:03:10,800
рассматривать как отдельные проблемы или

93
00:03:10,800 --> 00:03:12,800
объединять в более крупный набор данных, я думаю, что

94
00:03:12,800 --> 00:03:15,040
мы все еще решаем, как лучше

95
00:03:15,040 --> 00:03:18,959
концептуализировать эти различные активы данных,

96
00:03:18,959 --> 00:03:20,640
поэтому давайте рассмотрим первый раунд немного

97
00:03:20,640 --> 00:03:22,400
подробнее, с этого мы и начнем.  с

98
00:03:22,400 --> 00:03:24,959
моделью 0 и попытайтесь собрать интересные

99
00:03:24,959 --> 00:03:27,599
естественные предложения,

100
00:03:27,599 --> 00:03:30,080
поэтому модель стержня 0 является классификатором на основе Роберты,

101
00:03:30,080 --> 00:03:32,480
а его обучающие данные

102
00:03:32,480 --> 00:03:35,599
взяты из отзывов клиентов, что является

103
00:03:35,599 --> 00:03:37,760
небольшим набором данных imdb, на который я ссылался

104
00:03:37,760 --> 00:03:40,799
в предыдущем скринкасте sst3, который вы видели

105
00:03:40,799 --> 00:03:42,239
в предыдущем скринкасте, а затем в

106
00:03:42,239 --> 00:03:44,840
этих двух очень больших внешних тестах

107
00:03:44,840 --> 00:03:47,760
обзоров продуктов и услуг от yelp

108
00:03:47,760 --> 00:03:49,599
на amazon, вы можете видеть, что они очень

109
00:03:49,599 --> 00:03:51,120
большие  ed

110
00:03:51,120 --> 00:03:53,439
и производительность нулевой модели в

111
00:03:53,439 --> 00:03:55,200
наборах данных, это наши три внешних

112
00:03:55,200 --> 00:03:57,120
набора данных, они довольно хороши, они варьируются

113
00:03:57,120 --> 00:04:00,400
от низких 70 для sst three до

114
00:04:00,400 --> 00:04:02,959
высоких 70 для yelp и amazon, так что

115
00:04:02,959 --> 00:04:04,400
это надежная модель, и я скажу

116
00:04:04,400 --> 00:04:06,319
Импрессионистически, если вы загрузите

117
00:04:06,319 --> 00:04:08,159
модель 0 и поиграете с ней, вы

118
00:04:08,159 --> 00:04:10,080
обнаружите, что это действительно очень хорошая модель настроений,

119
00:04:10,080 --> 00:04:12,400


120
00:04:12,400 --> 00:04:14,720
поэтому мы используем модель 0 для сбора того, что, как мы

121
00:04:14,720 --> 00:04:16,478
надеемся, является сложными предложениями, и для

122
00:04:16,478 --> 00:04:18,639
этого мы используем академический набор данных yelp,

123
00:04:18,639 --> 00:04:20,639
который является очень  большая коллекция около 8

124
00:04:20,639 --> 00:04:22,960
миллионов обзоров, и наша эвристика заключается в

125
00:04:22,960 --> 00:04:24,320
том, что мы собираемся отдавать предпочтение в нашем

126
00:04:24,320 --> 00:04:26,720
процессе выборки, собирая предложения, в

127
00:04:26,720 --> 00:04:28,960
которых обзор был одной звездой,

128
00:04:28,960 --> 00:04:31,600
поэтому он очень низкий, и модель 0 предсказала

129
00:04:31,600 --> 00:04:33,840
положительный результат для данного предложения, и

130
00:04:33,840 --> 00:04:36,000
наоборот, где обзор составляет 5 звезд

131
00:04:36,000 --> 00:04:38,320
и модель 0 предсказала отрицательный результат,

132
00:04:38,320 --> 00:04:40,080
мы надеемся, что это, по крайней мере,

133
00:04:40,080 --> 00:04:41,919
создаст предвзятость для предложений, которые очень

134
00:04:41,919 --> 00:04:43,440
сложны для модели 0, где на

135
00:04:43,440 --> 00:04:45,280
самом деле она делает неправильный прогноз, от которого мы

136
00:04:45,280 --> 00:04:46,800
не будем зависеть.  в предположении,

137
00:04:46,800 --> 00:04:48,720
потому что у нас будет шаг проверки, но

138
00:04:48,720 --> 00:04:50,960
мы надеемся, что это будет настолько

139
00:04:50,960 --> 00:04:52,720
состязательным, насколько мы можем быть без

140
00:04:52,720 --> 00:04:55,840
фактических меток, чтобы начать

141
00:04:55,840 --> 00:04:57,520
это изображение интерфейса проверки,

142
00:04:57,520 --> 00:04:59,759
вы можете видеть, что было

143
00:04:59,759 --> 00:05:01,360
несколько примеров  после небольшого

144
00:05:01,360 --> 00:05:03,360
обучения тому, как использовать ярлыки, а

145
00:05:03,360 --> 00:05:05,039
затем, по сути, то, что сделали работники толпы

146
00:05:05,039 --> 00:05:06,720
, - это то, что им было предложено ввести предложение,

147
00:05:06,720 --> 00:05:08,720
и они сделали один из четырех вариантов:

148
00:05:08,720 --> 00:05:10,960
положительное отрицательное нет настроения, что является

149
00:05:10,960 --> 00:05:13,039
нашим понятием нейтрального и смешанного

150
00:05:13,039 --> 00:05:15,280
настроения, которое указывает  предложение

151
00:05:15,280 --> 00:05:16,880
, в котором выражен баланс положительных и

152
00:05:16,880 --> 00:05:18,880
отрицательных чувств, я

153
00:05:18,880 --> 00:05:20,479
думаю, что это важная категория, которую следует

154
00:05:20,479 --> 00:05:21,759
выделить, мы не собираемся пытаться

155
00:05:21,759 --> 00:05:23,919
моделировать эти предложения, но мы, безусловно,

156
00:05:23,919 --> 00:05:25,919
хотим, чтобы работники толпы регистрировали

157
00:05:25,919 --> 00:05:28,240
такое смешение эмоций,

158
00:05:28,240 --> 00:05:30,320
когда оно  появляется

159
00:05:30,320 --> 00:05:32,400
так вот результирующий набор данных, и

160
00:05:32,400 --> 00:05:34,960
поскольку мы получили пять золотых меток для

161
00:05:34,960 --> 00:05:36,080
каждого предложения, есть две

162
00:05:36,080 --> 00:05:38,400
точки зрения, которые вы можете использовать, первую

163
00:05:38,400 --> 00:05:40,160
из которых я назвал distr  логического поезда, и

164
00:05:40,160 --> 00:05:41,840
именно здесь, по сути, мы берем

165
00:05:41,840 --> 00:05:44,320
каждый из примеров и воспроизводим его

166
00:05:44,320 --> 00:05:46,800
пять раз для каждого из ярлыков, которые

167
00:05:46,800 --> 00:05:49,039
он получил, поэтому, если отдельное предложение получит

168
00:05:49,039 --> 00:05:50,800
три положительных ярлыка,

169
00:05:50,800 --> 00:05:53,280
два отрицательных, тогда у нас будет пять

170
00:05:53,280 --> 00:05:55,120
примеров, три помеченных как положительные и

171
00:05:55,120 --> 00:05:56,639
три помеченных как  отрицательный с фактическим

172
00:05:56,639 --> 00:05:59,440
текстом примера, повторенным пять раз,

173
00:05:59,440 --> 00:06:01,840
то, что он делает, по сути,

174
00:06:01,840 --> 00:06:04,000
имитирует распределение

175
00:06:04,000 --> 00:06:06,240
по меткам, и для многих

176
00:06:06,240 --> 00:06:08,000
моделей классификатора это буквально то же самое, что

177
00:06:08,000 --> 00:06:09,440
обучение распределению

178
00:06:09,440 --> 00:06:11,919
меток, данное нашими работниками толпы, я

179
00:06:11,919 --> 00:06:13,840
думаю  это захватывающий способ

180
00:06:13,840 --> 00:06:15,680
внести неопределенность

181
00:06:15,680 --> 00:06:17,280
и зафиксировать тот факт, что между работниками толпы могут быть

182
00:06:17,280 --> 00:06:19,039
своего рода врожденные разногласия, с

183
00:06:19,039 --> 00:06:20,800
которыми мы хотим, чтобы наша модель, по

184
00:06:20,800 --> 00:06:22,800
крайней мере, боролась,

185
00:06:22,800 --> 00:06:24,960
и в документе, когда мы обсуждаем это,

186
00:06:24,960 --> 00:06:27,520
это дает лучшие модели, чем обучение

187
00:06:27,520 --> 00:06:29,840
на  просто ярлыки большинства, но вы можете

188
00:06:29,840 --> 00:06:31,759
придерживаться более традиционного взгляда, поэтому

189
00:06:31,759 --> 00:06:33,360
ярлык большинства здесь означает, что по крайней мере три

190
00:06:33,360 --> 00:06:36,080
из пяти  rkers выбрали тот ярлык,

191
00:06:36,080 --> 00:06:39,120
который дает вам 94 или 95 000 предложений

192
00:06:39,120 --> 00:06:41,440
на поезд, а затем эти тестовые наборы Devon

193
00:06:41,440 --> 00:06:43,919
содержат 3 600 примеров каждый, и, по-видимому,

194
00:06:43,919 --> 00:06:45,919
мы бы предсказали для них только ярлык большинства,

195
00:06:45,919 --> 00:06:46,960


196
00:06:46,960 --> 00:06:48,960
что более открыто, так это то, как мы обучаем эти

197
00:06:48,960 --> 00:06:50,479
системы

198
00:06:50,479 --> 00:06:52,880
и, в конце концов  что мы обнаружили, так это то, что 47

199
00:06:52,880 --> 00:06:54,639
из этих примеров являются состязательными по

200
00:06:54,639 --> 00:06:56,319
отношению к модели 0.

201
00:06:56,319 --> 00:06:58,000
и, как вы увидите, набор разработчиков и

202
00:06:58,000 --> 00:07:00,160
тестов спроектирован так, что модель 0 дает

203
00:07:00,160 --> 00:07:02,400
шанс на них,

204
00:07:02,400 --> 00:07:03,919
да, это некоторая нулевая модель по сравнению с

205
00:07:03,919 --> 00:07:05,280
человеком, так что вот  краткое изложение

206
00:07:05,280 --> 00:07:07,039
производительности я показывал вам эти

207
00:07:07,039 --> 00:07:09,280
категории ранее, и я просто сигнализирую,

208
00:07:09,280 --> 00:07:11,599
что мы по замыслу гарантируем, что

209
00:07:11,599 --> 00:07:14,960
нулевая модель дает шанс в нулевом раунде,

210
00:07:14,960 --> 00:07:16,479
мы могли бы сравнить это с нашим

211
00:07:16,479 --> 00:07:19,039
базовым уровнем для человека, для этого мы как бы синтезировали

212
00:07:19,039 --> 00:07:21,840
пять аннотаторов и сделали попарно f1

213
00:07:21,840 --> 00:07:23,440
оценка для них, чтобы получить оценку

214
00:07:23,440 --> 00:07:25,360
производительности человека, которая находится в той же

215
00:07:25,360 --> 00:07:27,840
шкале, что и у нас из модели 0

216
00:07:27,840 --> 00:07:30,400
здесь, и мы ставим эту оценку на 88

217
00:07:30,400 --> 00:07:32,560
для наборов разработки и тестирования, я думаю, что

218
00:07:32,560 --> 00:07:34,479
это хороший минус  ervative number Я думаю, что если бы

219
00:07:34,479 --> 00:07:36,080
вы приблизились к нему, это было бы

220
00:07:36,080 --> 00:07:37,759
сигналом того, что мы как бы насытились в

221
00:07:37,759 --> 00:07:39,599
этом раунде и хотели бы подумать о

222
00:07:39,599 --> 00:07:41,919
создании дополнительных наборов данных, я

223
00:07:41,919 --> 00:07:43,280
хочу сигнализировать, хотя я думаю, что это

224
00:07:43,280 --> 00:07:45,680
консервативная оценка того, как люди

225
00:07:45,680 --> 00:07:47,440
и одним из показателей этого является то, что на

226
00:07:47,440 --> 00:07:49,520
самом деле 614

227
00:07:49,520 --> 00:07:51,440
из примерно 1200 человек, которые работали над

228
00:07:51,440 --> 00:07:54,160
этой задачей для проверки, никогда не возражали

229
00:07:54,160 --> 00:07:56,240
против ярлыка большинства, который как бы

230
00:07:56,240 --> 00:07:58,160
начинает предполагать, что есть люди

231
00:07:58,160 --> 00:08:00,080
, которые отлично справляются с этой

232
00:08:00,080 --> 00:08:03,120
задачей, ставя ее на довольно высокий уровень.  низкая граница,

233
00:08:03,120 --> 00:08:04,720
и вот несколько примеров предложений,

234
00:08:04,720 --> 00:08:06,720
которые полностью случайным образом выбраны

235
00:08:06,720 --> 00:08:08,479
с единственной погрешностью, заключающейся в том, что я установил ограничение длины,

236
00:08:08,479 --> 00:08:10,000
чтобы слайд был

237
00:08:10,000 --> 00:08:11,919
управляемым. Это те же примеры,

238
00:08:11,919 --> 00:08:14,160
которые появляются в статье, где нам нужно

239
00:08:14,160 --> 00:08:15,759
было разместить их все в  довольно маленькая

240
00:08:15,759 --> 00:08:17,520
таблица, я думаю, что это освещает,

241
00:08:17,520 --> 00:08:18,879
поэтому она показывает все различные

242
00:08:18,879 --> 00:08:20,800
способы, которыми модель 0 может запутаться

243
00:08:20,800 --> 00:08:23,039
в отношении ответа большинства,

244
00:08:23,039 --> 00:08:24,560
и я бы  хотел бы подчеркнуть для вас,

245
00:08:24,560 --> 00:08:26,639
что здесь есть реальное несоответствие

246
00:08:26,639 --> 00:08:29,120
относительно нейтральной категории, мы обнаружили,

247
00:08:29,120 --> 00:08:31,120
что, поскольку нулевая модель была обучена на

248
00:08:31,120 --> 00:08:33,760
крупных внешних тестах, ее понятие

249
00:08:33,760 --> 00:08:36,320
нейтральности на самом деле смешивает вещи,

250
00:08:36,320 --> 00:08:38,080
которые представляют собой смешанные чувства,

251
00:08:38,080 --> 00:08:39,760
и вещи, которые очень неопределенны

252
00:08:39,760 --> 00:08:41,440
в отношении  чувство, которое оно выражает

253
00:08:41,440 --> 00:08:42,958
по какой-либо причине, поэтому вы получаете много

254
00:08:42,958 --> 00:08:45,120
пограничных случаев и много случаев,

255
00:08:45,120 --> 00:08:47,200
когда людям по своей

256
00:08:47,200 --> 00:08:48,880
природе трудно договориться о том,

257
00:08:48,880 --> 00:08:52,320
какой будет фиксированная метка настроения,

258
00:08:52,320 --> 00:08:54,080
я думаю, что династия лучше

259
00:08:54,080 --> 00:08:56,320
справляется с захватом  какое-то понятие нейтральности

260
00:08:56,320 --> 00:08:58,240
в этих ярлыках здесь, тогда мы должны

261
00:08:58,240 --> 00:09:00,399
быть немного осторожны, рассматривая трехзвездочные

262
00:09:00,399 --> 00:09:02,880
обзоры и тому подобные вещи как настоящий

263
00:09:02,880 --> 00:09:05,120
показатель нейтральности.

264
00:09:05,120 --> 00:09:06,160


265
00:09:06,160 --> 00:09:08,000


266
00:09:08,000 --> 00:09:10,399


267
00:09:10,399 --> 00:09:12,320
предложений ресторана

268
00:09:12,320 --> 00:09:15,279
были проверены так же,

269
00:09:15,279 --> 00:09:17,600
как динозавры, поэтому эти предложения будут

270
00:09:17,600 --> 00:09:19,920
иметь тот же тип нейтральности,

271
00:09:19,920 --> 00:09:22,640
что и dynacent, который может  d быть

272
00:09:22,640 --> 00:09:24,399
противоположным ощущению нейтралитета, которое вы получаете

273
00:09:24,399 --> 00:09:26,320
от банка деревьев настроений Стэнфорда,

274
00:09:26,320 --> 00:09:28,160
который, конечно, в основе своей был как бы

275
00:09:28,160 --> 00:09:30,160
собран в условиях наличия

276
00:09:30,160 --> 00:09:34,000
фиксированной пятизвездочной рейтинговой шкалы,

277
00:09:34,399 --> 00:09:36,320
так что это раунд один, это все

278
00:09:36,320 --> 00:09:38,160
естественные предложения, давайте обратимся к раунду

279
00:09:38,160 --> 00:09:40,320
два, так что помните, что на этом этапе мы извлекаем выгоду из

280
00:09:40,320 --> 00:09:41,839
первого раунда, обучая совершенно

281
00:09:41,839 --> 00:09:43,839
новую модель на всех этих внешних

282
00:09:43,839 --> 00:09:46,320
наборах данных плюс набор данных первого раунда, а

283
00:09:46,320 --> 00:09:48,800
затем у нас есть рабочие на dynabench,

284
00:09:48,800 --> 00:09:50,880
взаимодействующие с этой моделью, чтобы попытаться обмануть

285
00:09:50,880 --> 00:09:52,720
ее, когда мы проверяем  результирующие

286
00:09:52,720 --> 00:09:55,040
предложения, чтобы получить наш набор данных второго раунда,

287
00:09:55,040 --> 00:09:56,720
поэтому первая модель снова является классификатором на основе Роберты. То,

288
00:09:56,720 --> 00:09:58,560
что мы сделали для нашего

289
00:09:58,560 --> 00:10:00,480
обучения здесь, более или менее перенесено из

290
00:10:00,480 --> 00:10:02,800
того, что мы сделали для первого раунда, за исключением того, что

291
00:10:02,800 --> 00:10:04,959
мы повысили выборку sst, чтобы дать  это

292
00:10:04,959 --> 00:10:07,120
больше веса, и мы значительно

293
00:10:07,120 --> 00:10:09,040
увеличили выборку меток распределения

294
00:10:09,040 --> 00:10:11,600
из нашего набора данных первого раунда, эффективно

295
00:10:11,600 --> 00:10:13,760
пытаясь придать ему такой же вес, как и всем

296
00:10:13,760 --> 00:10:15,600
этим другим наборам данных, объединенным в ходе

297
00:10:15,600 --> 00:10:17,279
обучения.  ocedure, поэтому мы пытаемся

298
00:10:17,279 --> 00:10:18,640
получить модель, которая

299
00:10:18,640 --> 00:10:21,040
в качестве приоритета действительно хорошо работает на нашем

300
00:10:21,040 --> 00:10:23,600
наборе данных первого раунда,

301
00:10:23,600 --> 00:10:25,360
вот посмотрите на производительность этой

302
00:10:25,360 --> 00:10:26,959
модели,

303
00:10:26,959 --> 00:10:28,480
и сначала я хотел бы просто отметить, что

304
00:10:28,480 --> 00:10:31,760
она хорошо работает на первом раунде около 81,

305
00:10:31,760 --> 00:10:33,760
что составляет  намного ниже, чем у людей, но, безусловно,

306
00:10:33,760 --> 00:10:35,440
намного лучше, чем случайная производительность

307
00:10:35,440 --> 00:10:38,160
по дизайну, которую мы установили для нулевой модели,

308
00:10:38,160 --> 00:10:39,760
я хочу показать, что у нас

309
00:10:39,760 --> 00:10:41,680
есть некоторое снижение производительности для некоторых

310
00:10:41,680 --> 00:10:43,440
из этих категорий, которые вы можете видеть,

311
00:10:43,440 --> 00:10:45,680
особенно для yelp и amazon.  где

312
00:10:45,680 --> 00:10:48,800
модель 0 была, например, на уровне 80, здесь

313
00:10:48,800 --> 00:10:51,200
модель 1 упала до 73, и

314
00:10:51,200 --> 00:10:53,440
аналогичная картина для разработчиков и более или

315
00:10:53,440 --> 00:10:55,360
менее повторяется для амазонки с падением

316
00:10:55,360 --> 00:10:58,079
примерно с 76 до 73

317
00:10:58,079 --> 00:11:01,519
и с 77 до 73.

318
00:11:01,519 --> 00:11:03,519
снижение производительности, что, как я полагаю,

319
00:11:03,519 --> 00:11:04,959
связано с тем, что мы

320
00:11:04,959 --> 00:11:07,040
вносим некоторые изменения в

321
00:11:07,040 --> 00:11:09,440
базовую семантику меток,

322
00:11:09,440 --> 00:11:10,880
но об этом следует помнить, и

323
00:11:10,880 --> 00:11:12,399
вы можете видеть, что здесь есть напряжение,

324
00:11:12,399 --> 00:11:15,279
поскольку мы пытаемся преуспеть в нашем наборе данных.

325
00:11:15,279 --> 00:11:17,600
против того, чтобы продолжать хорошо работать на этих

326
00:11:17,600 --> 00:11:21,200
фиксированных внешних тестах,

327
00:11:21,200 --> 00:11:22,800
вот интерфейс dynabench, и

328
00:11:22,800 --> 00:11:24,079
есть одна вещь, которую я хочу отметить

329
00:11:24,079 --> 00:11:25,920
по этому поводу, это стандартный интерфейс, но

330
00:11:25,920 --> 00:11:27,519
мы на самом деле сосредоточились на

331
00:11:27,519 --> 00:11:29,200
условии, которое мы назвали условием подсказки,

332
00:11:29,200 --> 00:11:31,200
когда рабочие

333
00:11:31,200 --> 00:11:32,959
вместо  просто написать предложение как

334
00:11:32,959 --> 00:11:34,560
чистый лист, как вы знаете, сесть за

335
00:11:34,560 --> 00:11:36,720
пустой буфер и попытаться обмануть модель,

336
00:11:36,720 --> 00:11:38,640
им дали вдохновляющую подсказку,

337
00:11:38,640 --> 00:11:40,399
которая была в проверенном предложении из

338
00:11:40,399 --> 00:11:43,200
академического набора данных yelp, и предложили

339
00:11:43,200 --> 00:11:45,200
изменить это предложение, если они захотят

340
00:11:45,200 --> 00:11:47,279
чтобы достичь своей цели

341
00:11:47,279 --> 00:11:49,440
обмануть модель определенным образом, и это

342
00:11:49,440 --> 00:11:51,279
оказалось гораздо более продуктивным, это

343
00:11:51,279 --> 00:11:53,040
привело к более разнообразным и реалистичным

344
00:11:53,040 --> 00:11:55,600
предложениям, я думаю, что мы по существу

345
00:11:55,600 --> 00:11:57,519
освободили толпу работников от творческого

346
00:11:57,519 --> 00:11:59,839
бремени необходимости каждый раз приходить

347
00:11:59,839 --> 00:12:01,680
с совершенно новым предложением, и мы

348
00:12:01,680 --> 00:12:03,760
надеемся, что эта процедура приведет к

349
00:12:03,760 --> 00:12:06,720
меньшему количеству артефактов, большему разнообразию и большей

350
00:12:06,720 --> 00:12:09,360
реалистичности для этого враждебного набора данных.

351
00:12:09,360 --> 00:12:12,480
процедура

352
00:12:12,560 --> 00:12:14,399
проверки наш конвейер проверки был точно таким

353
00:12:14,399 --> 00:12:16,480
же, как и в первом раунде, и вот

354
00:12:16,480 --> 00:12:17,920
результирующий набор данных, он немного

355
00:12:17,920 --> 00:12:19,600
меньше, потому что такой

356
00:12:19,600 --> 00:12:21,760
сбор состязательных наборов данных сложен, и вы можете

357
00:12:21,760 --> 00:12:24,000
видеть, насколько хороша первая модель, это было

358
00:12:24,000 --> 00:12:25,600
довольно сложно для толпы  рабочие,

359
00:12:25,600 --> 00:12:27,519
чтобы обмануть эту модель, они делали это только

360
00:12:27,519 --> 00:12:29,920
примерно в 19 случаях,

361
00:12:29,920 --> 00:12:31,200
вот набор данных для

362
00:12:31,200 --> 00:12:32,639
обучения распределению, у вас есть около

363
00:12:32,639 --> 00:12:35,360
93 000 предложений, и если вы выберете

364
00:12:35,360 --> 00:12:37,120
обучение по маркировке большинства, у вас будет около

365
00:12:37,120 --> 00:12:39,680
19 000, а тестовые наборы Девона

366
00:12:39,680 --> 00:12:41,360
меньше, но  Опять же, причина, по которой они

367
00:12:41,360 --> 00:12:43,680
меньше, заключается в том, что они предназначены для установки

368
00:12:43,680 --> 00:12:45,839
модели один как имеющая случайную производительность

369
00:12:45,839 --> 00:12:47,680
в этом наборе данных,

370
00:12:47,680 --> 00:12:49,040
и поэтому

371
00:12:49,040 --> 00:12:50,880


372
00:12:50,880 --> 00:12:52,399
я подробно расскажу

373
00:12:52,399 --> 00:12:54,399
об этом здесь.  хорошо, в первом раунде, и

374
00:12:54,399 --> 00:12:56,240
у нас была такая напряженность с

375
00:12:56,240 --> 00:12:58,880
внешними ориентирами с точки зрения человеческой

376
00:12:58,880 --> 00:13:01,120
производительности, мы примерно на 90, используя эту

377
00:13:01,120 --> 00:13:03,600
процедуру синтезированного вида

378
00:13:03,600 --> 00:13:06,320
усредненных значений f1 и  Ди просто еще раз отметил бы

379
00:13:06,320 --> 00:13:08,320
, что это, безусловно, консервативно

380
00:13:08,320 --> 00:13:10,240
, поскольку вы знаете, что почти половина

381
00:13:10,240 --> 00:13:12,000
рабочих никогда не соглашалась с

382
00:13:12,000 --> 00:13:14,480
маркировкой большинства, поэтому отдельные люди, безусловно,

383
00:13:14,480 --> 00:13:16,399
в состоянии

384
00:13:16,399 --> 00:13:18,320
работать идеально на этом

385
00:13:18,320 --> 00:13:19,360
наборе данных,

386
00:13:19,360 --> 00:13:21,680
но 90, тем не менее, является хорошим указателем

387
00:13:21,680 --> 00:13:23,760
для  нас, когда мы думаем о восхождении на холм

388
00:13:23,760 --> 00:13:25,279
и запуске последующих раундов

389
00:13:25,279 --> 00:13:26,639
dynacent,

390
00:13:26,639 --> 00:13:28,560
и вот несколько коротких примеров, и я

391
00:13:28,560 --> 00:13:29,680
думаю, что они показывают то же самое, что наша

392
00:13:29,680 --> 00:13:31,360
нейтральная категория более

393
00:13:31,360 --> 00:13:32,959
соответствует семантике того, что мы имеем в виду, когда мы

394
00:13:32,959 --> 00:13:34,720
идентифицируем нейтральные предложения и менее

395
00:13:34,720 --> 00:13:36,880
разнородны, чем  вы получаете из

396
00:13:36,880 --> 00:13:38,560
встречающихся в природе

397
00:13:38,560 --> 00:13:40,480
нейтральных предложений, полученных из

398
00:13:40,480 --> 00:13:42,320
метаданных звездного рейтинга и т. д., поэтому я надеюсь,

399
00:13:42,320 --> 00:13:44,000
что это своего рода положительный

400
00:13:44,000 --> 00:13:45,839
шаг к получению истинного троичного

401
00:13:45,839 --> 00:13:47,760
настроения, но мы должны знать, что

402
00:13:47,760 --> 00:13:49,839
это изменение ярлыка произошло в этих

403
00:13:49,839 --> 00:13:51,279
наборах данных

404
00:13:51,279 --> 00:13:52,480
и  последнее, что я хочу сказать, это

405
00:13:52,480 --> 00:13:54,079
просто повторить, что если люди проделают

406
00:13:54,079 --> 00:13:56,079
увлекательную работу с этим набором данных и

407
00:13:56,079 --> 00:13:57,920
начнут  добиться реального прогресса в

408
00:13:57,920 --> 00:14:00,639
существующих раундах, что послужит нам сигналом к

409
00:14:00,639 --> 00:14:03,279
запуску новых раундов. dyna в dynacent

410
00:14:03,279 --> 00:14:04,399
заключается в том, что мы хотели бы иметь

411
00:14:04,399 --> 00:14:06,639
развивающийся эталон, не статичный,

412
00:14:06,639 --> 00:14:08,800
а скорее реагирующий на прогресс,

413
00:14:08,800 --> 00:14:10,959
достигнутый в этой области, и меняющиеся

414
00:14:10,959 --> 00:14:12,720
потребности людей.  которые пытаются разработать

415
00:14:12,720 --> 00:14:15,360
практические системы анализа настроений,

416
00:14:15,360 --> 00:14:17,600
поэтому сообщите нам, какого прогресса вы достигли

417
00:14:17,600 --> 00:14:21,320
и что вы обнаружили.

